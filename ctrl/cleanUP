#!/bin/bash
BINARIES_PATH=$(grep -A0 'BINARIES_PATH' "/usr/local/production/config/ctrl1conf.yaml" | cut -d: -f2 | sed 's/[\" ]//g')
EM100BMC=$(grep -A0 'EM100BMC' "/usr/local/production/config/ctrl1conf.yaml" | cut -d: -f2 | sed 's/[\" ]//g')
EM100BIOS=$(grep -A0 'EM100BIOS' "/usr/local/production/config/ctrl1conf.yaml" | cut -d: -f2 | sed 's/[\" ]//g')
kill_named_process()
{
        name=$1
        pid=`pgrep "$1"`
	arr=($pid)
        if [[ "$pid" != "" ]]; then
                kill -9 ${arr[${#arr[@]}-1]}
		echo "killing ${arr[${#arr[@]}-1]}" >> /tmp/PID
        fi
}

kill_named_process em100
kill_named_process em100
kill_named_process ttyd
kill_named_process ttyd
kill_named_process ttyd
kill_named_process ttyd
kill_named_process read_pipe
kill_named_process read_pipe
kill_named_process read_pipe_smbios
kill_named_process read_pipe_smbios

# We must close the screen terminal
terminal=`screen -ls | awk '{ print $1 }' | grep -v "No" | grep -v "There" | grep -v "Remove" | awk -F"." '{ print $1 }'`
if [ ${#terminal} != 1 ] 
then
for i in $terminal
do
	kill -9 $i
	screen -wipe
done
fi

#We have to reset the PCI bus
#Now that we have a foolproof way or resetting the em100, I don't think this pci bus reset is necessary so I am editing this to call the reset_em100 script again.
myid=`whoami`
#sudo -E $BINARIES_PATH/reset_bus $myid
$BINARIES_PATH/reset_em100
$BINARIES_PATH/em100 -x $EM100BMC -s
$BINARIES_PATH/em100 -x $EM100BIOS -s
touch /tmp/cleanUpDONE
rm -rf firmwares/*
